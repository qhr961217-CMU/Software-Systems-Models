//
// 17-651: FSP model of a simple infusion pump
//
// ASSUMPTIONS
// - The user can choose, in the setup phase, which item of info to enter next.
// - The simple enter_value action is a simple number pad where the user enters
//   numeric values.
// - There exist 'set' and 'cancel' buttons, which are the targets of press_set
//   and press_cancel.
// - When the user turns the unit off, the unit will be in a state as if it was
//   just plugged in.
//

//
// Set of actions that the user of the LTSA tool can control in an
// animation of this model.
//

const MaxLineNum = 2
range LineIDs = 1 .. MaxLineNum

menu UserControlMenu = {
	// POWER_SYSTEM
	turn_on, plug_in, unplug, turn_off, replace_batt, restore_elec,

	// PUMP
    line[i:LineIDs].change_settings, line[i:LineIDs].clear_rate, line[i:LineIDs].confirm_settings, line[i:LineIDs].connect_set,
    line[i:LineIDs].dispense_main_med_flow, line[i:LineIDs].enter_value, line[i:LineIDs].erase_and_unlock_line,
    line[i:LineIDs].flow_unblocked, line[i:LineIDs].sound_alarm, line[i:LineIDs].lock_unit, line[i:LineIDs].press_cancel, 
    line[i:LineIDs].press_set, line[i:LineIDs].set_rate, line[i:LineIDs].silence_alarm, line[i:LineIDs].unlock_unit,
    line[i:LineIDs].flow_blocked
}

//======================
// Constants and Ranges
//======================

//
// States of the pump alarm
//
const AlarmActivated = 0    // Alarm currently active
const AlarmSilenced  = 1    // Alarm currently inactive

range AlarmStateT = AlarmActivated .. AlarmSilenced

//
// States of the pump settings
//
const ParamsNotSet = 2    // pump parameters not set yet
const ParamsSet    = 3    // pump parameters already set

range ParamsStateT = ParamsNotSet .. ParamsSet

//
// Locked/unlocked states of a line with respect to a pump channel
//
const LineUnlocked = 4  // line not locked into a pump channel 
const LineLocked   = 5  // line locked into a pump channel

range LineLockStateT = LineUnlocked .. LineLocked

//
// Locked/unlocked states of the pump unit
//
const UnitUnlocked = 6  // the keypad of the pump is not locked
const UnitLocked   = 7  // the keypad of the pump is locked

range UnitLockStateT = UnitUnlocked .. UnitLocked

//=====================
// Power System Process 
//=====================

const ElecBroken = 0
const ElecWorking = 1
range ElecStateT = ElecBroken .. ElecWorking

const Unplugged = 0
const Plugged = 1
range PlugStateT = Unplugged .. Plugged

const BattBroken = 0
const BattWorking = 1
range BattStateT = BattBroken .. BattWorking

const PowerOff = 0
const PowerOn = 1
range PowerStateT = PowerOff .. PowerOn

POWER_SYSTEM = SUB_POWER_SYSTEM[ElecWorking][Unplugged][BattWorking][PowerOff],
SUB_POWER_SYSTEM[elec:ElecStateT][plug:PlugStateT][batt:BattStateT][power:PowerStateT] = (
	// The power system is able to be turned on
	when (power == PowerOff && (batt == BattWorking || (elec == ElecWorking && plug == Plugged)))
		turn_on -> SUB_POWER_SYSTEM[elec][plug][batt][PowerOn]
	|
	// The power system is already working - supplied by either sources
	when (power == PowerOn)
		turn_off -> SUB_POWER_SYSTEM[elec][plug][batt][PowerOff]
	|
	// The power is supplied by both
	when (power == PowerOn && batt == BattWorking && elec == ElecWorking && plug == Plugged)
		unplug -> SUB_POWER_SYSTEM[elec][Unplugged][batt][PowerOn]
	|
	when (power == PowerOn && batt == BattWorking && elec == ElecWorking && plug == Plugged)
		elec_failure -> SUB_POWER_SYSTEM[ElecBroken][plug][batt][PowerOn]
	|
	when (power == PowerOn && batt == BattWorking && elec == ElecWorking && plug == Plugged)
		batt_failure -> SUB_POWER_SYSTEM[elec][plug][BattBroken][PowerOn]
	|
	// The power is supplied solely by electricity
	when (power == PowerOn && batt == BattBroken && elec == ElecWorking && plug == Plugged)
		unplug -> power_failure -> SUB_POWER_SYSTEM[elec][Unplugged][batt][PowerOff]
	|
	when (power == PowerOn && batt == BattBroken && elec == ElecWorking && plug == Plugged)
		elec_failure -> power_failure -> SUB_POWER_SYSTEM[ElecBroken][plug][batt][PowerOff]
	|
	// The power is supplied solely by the battery
	when (power == PowerOn && batt == BattWorking && (elec == ElecBroken || plug == Unplugged))
		batt_failure -> power_failure -> SUB_POWER_SYSTEM[elec][plug][BattBroken][PowerOff]
	|
	// The battery is not working properly
	when (batt == BattBroken)
		// Replace the battery
		replace_batt -> SUB_POWER_SYSTEM[elec][plug][BattWorking][power]
	|
	// The cord is unplugged
	when (plug == Unplugged)
		// Plug in the cord
		plug_in -> SUB_POWER_SYSTEM[elec][Plugged][batt][power]
	|
	// The external electricity is broken
	when (elec == ElecBroken)
		// Restore the external electricity
		restore_elec -> SUB_POWER_SYSTEM[ElecWorking][plug][batt][power]
).

//=====================
// Line Process 
//=====================


//=====================
// Pump Process 
//=====================

PUMP = POWER_OFF,
POWER_OFF = 
(
    turn_on -> SETUP[ParamsNotSet][LineUnlocked]
),

//
// Pump in setup mode:
// - Once required pump parameters (just rate in this case) are set,
//   physical connections can be made and line can be locked
//
SETUP[params:ParamsStateT][lineLock:LineLockStateT] = 
(
	power_failure -> POWER_OFF
	|
    turn_off -> POWER_OFF
    |
    when (params == ParamsNotSet && lineLock == LineUnlocked)
        set_rate -> enter_value ->
            (press_set -> SETUP[ParamsSet][lineLock]
             |
             press_cancel -> SETUP[ParamsNotSet][lineLock])
    |
    when (params == ParamsSet && lineLock == LineUnlocked)
        clear_rate -> SETUP[ParamsNotSet][lineLock]
    |
    when (params == ParamsSet && lineLock == LineUnlocked)
        connect_set -> purge_air -> lock_line -> SETUP[params][LineLocked]
    |
    when (lineLock == LineLocked)
        confirm_settings -> INFUSION[UnitUnlocked]
    |
    when (lineLock == LineLocked)
        erase_and_unlock_line -> SETUP[params][LineUnlocked]
),

//
// Pump in infusion mode:
// - Always be able to turn the unit off, even if locked
// - Allow the user to lock/unlock the unit
// - Errors could occur with the pump (e.g., line became pinched or plugged)
//
INFUSION[unitLock:UnitLockStateT] =
(
	power_failure -> POWER_OFF
	|
    turn_off -> POWER_OFF
    |
    when (unitLock == UnitUnlocked)
        change_settings -> SETUP[ParamsSet][LineLocked]
    |
    when (unitLock == UnitUnlocked)
        lock_unit -> INFUSION[UnitLocked]
    |
    when (unitLock == UnitLocked)
        unlock_unit -> INFUSION[UnitUnlocked]
    |
    dispense_main_med_flow -> INFUSION[unitLock]
    |
    flow_blocked -> sound_alarm -> INFUSION_BLOCKED[unitLock][AlarmActivated]
),

//
// Pump stuck (medication flow suspended)
//
INFUSION_BLOCKED[unitLock:UnitLockStateT][alarm:AlarmStateT] =
(
	power_failure -> POWER_OFF
	|
    turn_off -> POWER_OFF
    |
    when (alarm == AlarmActivated)
        sound_alarm -> INFUSION_BLOCKED[unitLock][alarm]
    |
    when (alarm == AlarmActivated)
        silence_alarm -> INFUSION_BLOCKED[unitLock][AlarmSilenced]
    |
    flow_unblocked -> INFUSION[unitLock]
).


||INFUSSION_PUMP = (line[LineIDs]:PUMP || POWER_SYSTEM) /
	{turn_on / line[LineIDs].turn_on,
	turn_off / line[LineIDs].turn_off,
	power_failure / line[LineIDs].power_failure}.
